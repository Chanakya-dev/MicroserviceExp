server:
  port: 8082

spring:
  application:
    name: task-service

  datasource:
    url: jdbc:mysql://test-app.c7e42wekkhl4.eu-north-1.rds.amazonaws.com:3306/tasks
    username: admin
    password: Manas2003
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQLDialect

  kafka:
    bootstrap-servers: b-1.kafkatest.abcde.c5.kafka.eu-north-1.amazonaws.com:9092,b-2.kafkatest.xyzde.c5.kafka.eu-north-1.amazonaws.com:9092
    consumer:
      group-id: task-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  redis:
    host: redis-8yozlv.serverless.eun1.cache.amazonaws.com
    port: 6379
    password: Manas@2003
    timeout: 5000
    lettuce:
      pool:
        max-active: 50
        max-idle: 20
        min-idle: 5
        max-wait: 1000

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

resilience4j:
  circuitbreaker:
    instances:
      taskServiceCB:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 15s

  timelimiter:
    instances:
      taskServiceCB:
        timeout-duration: 5s

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, circuitbreakers

  endpoint:
    health:
      show-details: always

logging:
  level:
    io.github.resilience4j.circuitbreaker: INFO
    io.github.resilience4j.timelimiter: INFO
