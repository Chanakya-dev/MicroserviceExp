name: Build and Deploy All Services to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-north-1
  ECR_REGISTRY: 643208527492.dkr.ecr.eu-north-1.amazonaws.com
  IMAGE_TAG: latest
  ECS_CLUSTER: microservice-exp

jobs:
  deploy-all:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      matrix:
        include:
          - name: demo1
            service_path: demo1/demo1
            ecr_repository: taskmanagement/user-service
            ecs_service: demo1

          - name: demo2
            service_path: demo2/demo2
            ecr_repository: taskmanagement/task-service
            ecs_service: demo2

          - name: api-gateway
            service_path: Api-Gateway/Api-Gateway
            ecr_repository: taskmanagement/api-gateway
            ecs_service: api-gateway

          - name: eureka-server
            service_path: service/service
            ecr_repository: taskmanagement/eureka-server
            ecs_service: eureka-server

    name: Build & Deploy ${{ matrix.name }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
        set -x
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

    - name: Build Docker image - ${{ matrix.name }}
      run: |
        set -x
        docker build -t ${{ matrix.ecr_repository }}:$IMAGE_TAG .
        docker tag ${{ matrix.ecr_repository }}:$IMAGE_TAG $ECR_REGISTRY/${{ matrix.ecr_repository }}:$IMAGE_TAG
      working-directory: ${{ matrix.service_path }}

    - name: List Docker images after build
      run: docker images

    - name: Push Docker image to Amazon ECR - ${{ matrix.name }}
      run: |
        set -x
        docker push $ECR_REGISTRY/${{ matrix.ecr_repository }}:$IMAGE_TAG

    - name: List Docker images after push
      run: docker images

    - name: Deploy to Amazon ECS - ${{ matrix.name }}
      run: |
        set -x
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service ${{ matrix.ecs_service }} \
          --force-new-deployment \
          --region $AWS_REGION
