name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Create remote directories on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@51.21.50.201 << EOF
            mkdir -p /home/ubuntu/app/demo1/demo1
            mkdir -p /home/ubuntu/app/demo2/demo2
            mkdir -p /home/ubuntu/app/ApiGateway/ApiGateway
            mkdir -p /home/ubuntu/app/service/service
          EOF

      - name: Rsync code to EC2
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./demo1/demo1/ ubuntu@51.21.50.201:/home/ubuntu/app/demo1/demo1/
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./demo2/demo2/ ubuntu@51.21.50.201:/home/ubuntu/app/demo2/demo2/
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./ApiGateway/ApiGateway/ ubuntu@51.21.50.201:/home/ubuntu/app/ApiGateway/ApiGateway/
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./service/service/ ubuntu@51.21.50.201:/home/ubuntu/app/service/service/
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./docker-compose.yml ubuntu@51.21.50.201:/home/ubuntu/app/

      - name: Redeploy recently updated services
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@51.21.50.201 << EOF
            cd /home/ubuntu/app

            redeploy_if_updated() {
              SERVICE=\$1
              DIR=\$2

              if find "\$DIR" -type f -mmin -30 | grep -q .; then
                echo "Files updated in last 30 mins for \$SERVICE. Redeploying..."
                docker-compose rm -fs \$SERVICE
                docker-compose build \$SERVICE
                docker-compose up -d \$SERVICE
              else
                echo "No recent updates in \$SERVICE. Skipping."
              fi
            }

            redeploy_if_updated user-service demo1/demo1
            redeploy_if_updated task-service demo2/demo2
            redeploy_if_updated api-gateway ApiGateway/ApiGateway
            redeploy_if_updated eureka-server service/service
          EOF
