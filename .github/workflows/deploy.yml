name: Build and Deploy All Services to Amazon ECS

on:
  push:
    branches:
      - main

# concurrency:
#   group: build-deploy-${{ github.ref }}
#   cancel-in-progress: true

env:
  AWS_REGION: eu-north-1
  ECR_REGISTRY: 643208527492.dkr.ecr.eu-north-1.amazonaws.com
  IMAGE_TAG: latest
  ECS_CLUSTER: microservice-exp

jobs:
  deploy-all:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: demo1
            service_path: demo1/demo1
            ecr_repository: taskmanagement/user-service
            ecs_service: demo1

          - name: demo2
            service_path: demo2/demo2
            ecr_repository: taskmanagement/task-service
            ecs_service: demo2

          - name: api-gateway
            service_path: api-gateway/api-gateway
            ecr_repository: taskmanagement/api-gateway
            ecs_service: api-gateway

          - name: eureka-server
            service_path: service/service
            ecr_repository: taskmanagement/eureka-server
            ecs_service: eureka-server

    name: Build & Deploy ${{ matrix.name }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Debug Working Directory
        run: pwd
        working-directory: ${{ matrix.service_path }}

      - name: Build Docker Image - ${{ matrix.name }}
        run: |
          docker build -t ${{ matrix.ecr_repository }}:$IMAGE_TAG .
          docker tag ${{ matrix.ecr_repository }}:$IMAGE_TAG $ECR_REGISTRY/${{ matrix.ecr_repository }}:$IMAGE_TAG
        working-directory: ${{ matrix.service_path }}

      - name: Push Docker Image to Amazon ECR - ${{ matrix.name }}
        run: |
          docker push $ECR_REGISTRY/${{ matrix.ecr_repository }}:$IMAGE_TAG

      - name: Deploy to Amazon ECS - ${{ matrix.name }}
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service ${{ matrix.ecs_service }} \
            --force-new-deployment \
            --region $AWS_REGION
